1.

a)
CREATE TABLE BIRACKO_MESTO(

	ID NUMBER(10,0),
	OPSTINA VARCHAR(30) NOT NULL,
	REDNI_BR NUMBER (2,0)NOT NULL,
	ADRESA VARCHAR(30),
	UKUPNO_GLASACA INT,
	UKUPNO_LISTICA INT,
	UKUPNO_NEVAZECIH INT,
	UKUPNO_VAZECIH INT,
	CONSTRAINT BIRACKO_MESTO_PK PRIMARY KEY(ID)
);
CREATE TABLE UCESNIK(

	ID NUMBER(10,0),
	NAZIV VARCHAR(30),
	NOSILAC_LISTE VARCHAR(30) NOT NULL,
	REDNI_BROJ NUMBER(2,0) NOT NULL ,
	CONSTRAINT UCESNIK_PK PRIMARY KEY (ID),
	CONSTRAINT NAZIV_CHECK CHECK (NAZIV IN ('stranka','koalicija','grupa gradjana'))
);
CREATE TABLE REZULTATI(

	ID_BIRACKO_MESTO NUMBER(10,0),
	ID_UCESNIK NUMBER(10,0),
	BROJ_GLASOVA INT,
	CONSTRAINT REZULTATI_PK PRIMARY KEY (ID_BIRACKO_MESTO,ID_UCESNIK),
	CONSTRAINT REZULTATI_BIRACKO_FK FOREIGN KEY (ID_BIRACKO_MESTO) REFERENCES BIRACKO_MESTO(ID),
	CONSTRAINT REZULTATI_UCESNIK_FK FOREIGN KEY (ID_UCESNIK) REFERENCES UCESNIK(ID)
);

b)
	SELECT DISTINCT UCESNIK.NAZIV
	FROM UCESNIK
	INNER JOIN REZULTATI ON UCESNIK.ID = REZULTATI.ID_UCESNIK
	WHERE REZULTATI.BROJ_GLASOVA > 1000
	ORDER BY REZULTATI.BROJ_GLASOVA DESC;

c)
	SELECT BIRACKO_MESTO.ID,BIRACKO_MESTO.OPSTINA,BIRACKO_MESTO.ADRESA
	FROM BIRACKO_MESTO
	INNER JOIN REZULTATI ON BIRACKO_MESTO.ID = REZULTATI.ID_BIRACKO_MESTO
	GROUP BY BIRACKO_MESTO.ID,BIRACKO_MESTO.OPSTINA,BIRACKO_MESTO.ADRESA
	HAVING SUM(REZULTATI.BROJ_GLASOVA)<5000
	ORDER BY BIRACKO_MESTO.ADRESA ASC


d)
	SELECT UCESNIK.NAZIV
	FROM UCESNIK
	INNER JOIN REZULTATI ON UCESNIK.ID = REZULTATI.ID_UCESNIK
	INNER JOIN BIRACKO_MESTO ON REZULTATI.ID_BIRACKO_MESTO = BIRACKO_MESTO.ID
	GROUP BY UCESNIK.ID, UCESNIK.NAZIV
	HAVING SUM(REZULTATI.BROJ_GLASOVA) > 100
	   AND BIRACKO_MESTO.UKUPNO_GLASACA >= 1000
	   AND UCESNIK.ID NOT IN (
	       SELECT DISTINCT REZULTATI.ID_UCESNIK
	       FROM REZULTATI
	       INNER JOIN BIRACKO_MESTO ON REZULTATI.ID_BIRACKO_MESTO = BIRACKO_MESTO.ID
	       WHERE REZULTATI.BROJ_GLASOVA > 2000
 );

e)
	SELECT* 
	FROM(SELECT UCESNIK.NAZIV FROM UCESNIK INNER JOIN REZULTATI ON UCESNIK.ID = REZULTATI.ID_UCESNIK 
		GROUP BY UCESNIK.NAZIV,UCESNIK.ID
		ORDER BY SUM(REZULTATI.BROJ_GLASOVA) DESC
		)
	WHERE ROWNUM=1

f)
	CREATE VIEW UCESNIK_STATISTIKA
	AS
	SELECT UCESNIK.NAZIV,UCESNIK.REDNI_BROJ,SUM(REZULATATI.BROJ_GLASOVA) AS UKUPAN_BROJ_GLASOVA,AVG(REZULATATI.BROJ_GLASOVA) AS PROSECAN_BROJ_GLASOVA
	FROM UCESNIK INNER JOIN REZULTATI ON UCESNIK.ID = REZULTATI.ID_UCESNIK
	WHERE UPPER(UCESNIK.NAZIV) LIKE '%SRBIJA%'
	GROUP BY UCESNIK.NAZIV,UCESNIK.REDNI_BROJ;

	SELECT * 
	FROM ( 
	SELECT UCESNIK_STATISTIKA.*
	FROM UCESNIK_STATISTIKA
	ORDER BY UCESNIK_STATISTIKA.PROSECAN_BROJ_GLASOVA DESC
	)
	WHERE ROWNUM=1

g)
	UPDATE UCESNIK
	SET UCESNIK.REDNI_BROJ=1000
	WHERE UCESNIK.ID IN (SELECT UCESNIK.ID FROM UCESNIK 
		INNER JOIN REZULTATI ON UCESNIK.ID=REZULTATI.ID_UCESNIK
		GROUP BY UCESNIK.ID HAVING 
		SUM(REZULTATI.BROJ_GLASOVA)<100
);

h)
	DELETE FROM REZULTATI
	WHERE ID_BIRACKO_MESTO IN (
	   SELECT BIRACKO_MESTO.ID
	   FROM REZULTATI
	   INNER JOIN BIRACKO_MESTO ON BIRACKO_MESTO.ID = REZULTATI.ID_BIRACKO_MESTO
	   INNER JOIN UCESNIK ON REZULTATI.ID_UCESNIK = UCESNIK.ID
	   WHERE BIRACKO_MESTO.UKUPNO_NEVAZECIH / BIRACKO_MESTO.UKUPNO_LISTICA > 0.05
	   AND UCESNIK.BROJ_GLASOVA > 2000
	);